- name: ensure Git is installed via the system package
  apt: name=git-core state=present update_cache=yes
  become: yes

- name: create deploy key directory if it does not exist
  file: path=/home/{{ deploy_user }}/deploy_key state=directory

- name: ensure deploy key is on remote server
  copy: src=./deploy_key
        dest=/home/{{ deploy_user }}/deploy_key/deploy_key
        mode=0600 owner={{ deploy_user }} group={{ deploy_group }}

- name: clone or pull the latest web app code
  git: repo={{ code_repository }} dest={{ app_dir }}
       key_file=/home/{{ deploy_user }}/deploy_key/deploy_key
       accept_hostkey=yes
       version={{ git_branch }}
       force=yes
  become_user: django

- name: Build docker production images
  command: docker-compose -f production.yml build
  args:
    chdir: "{{ app_dir }}"

- stat: path=/var/lib/docker/volumes/{{ certs_volume }}
  register: cert_rules

- name: Get SSL certificates for {{ domain_name }} on volume {{ certs_volume }}
  command: "docker run -p 80:80 -v {{ certs_volume }}:/etc/letsencrypt deliverous/certbot certonly --standalone -m {{ contact_email }} --agree-tos --non-interactive -d {{ domain_name }}"
  when: cert_rules.stat.exists == False
